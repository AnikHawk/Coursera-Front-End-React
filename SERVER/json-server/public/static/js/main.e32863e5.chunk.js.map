{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","redux/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","toggleNav","bind","toggleModal","handleLogin","state","isNavOpen","isModalOpen","this","setState","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","className","onClick","href","src","height","width","alt","isOpen","navbar","to","outline","toggle","onSubmit","htmlFor","type","id","name","innerRef","input","check","color","Component","Footer","Loading","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","image","designation","description","Home","dish","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","Menu","menu","dishes","map","key","active","RenderLeader","tag","left","middle","object","body","heading","About","title","list","leaders","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","values","console","log","JSON","stringify","postFeedback","resetFeedbackForm","role","model","handleSubmit","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","RenderComments","comments","postComment","dishId","_comments","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","RenderDish","top","CommentForm","rating","React","Dishdetail","dishesLoading","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","message","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e32863e5.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavbarToggler,\r\n  Collapse,\r\n  NavItem,\r\n  Jumbotron,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen: false,\r\n    };\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen,\r\n    });\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    alert(\r\n      'Username: ' +\r\n        this.username.value +\r\n        ' Password: ' +\r\n        this.password.value +\r\n        ' Remember: ' +\r\n        this.remember.checked\r\n    );\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar dark expand=\"md\">\r\n          <div className=\"container\">\r\n            <NavbarToggler onClick={this.toggleNav} />\r\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n              <img\r\n                src=\"assets/images/logo.png\"\r\n                height=\"30\"\r\n                width=\"41\"\r\n                alt=\"Ristorante Con Fusion\"\r\n              />\r\n            </NavbarBrand>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/home\">\r\n                    <span className=\"fa fa-home fa-lg\" /> Home\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                    <span className=\"fa fa-info fa-lg\" /> About Us\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/menu\">\r\n                    <span className=\"fa fa-list fa-lg\" /> Menu\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                    <span className=\"fa fa-address-card fa-lg\" /> Contact Us\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-sign-in fa-lg\" /> Login\r\n                  </Button>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </div>\r\n        </Navbar>\r\n        <Jumbotron>\r\n          <div className=\"container\">\r\n            <div className=\"row row-header\">\r\n              <div className=\"col-12 col-sm-6\">\r\n                <h1>Ristorante con Fusion</h1>\r\n                <p>\r\n                  We take inspiration from the World's best cuisines, and create\r\n                  a unique fusion experience. Our lipsmacking creations will\r\n                  tickle your culinary senses!\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.handleLogin}>\r\n              <FormGroup>\r\n                <Label htmlFor=\"username\">Username</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  innerRef={input => (this.username = input)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"password\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  innerRef={input => (this.password = input)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input\r\n                    type=\"checkbox\"\r\n                    name=\"remember\"\r\n                    innerRef={input => (this.remember = input)}\r\n                  />\r\n                  Remember me\r\n                </Label>\r\n              </FormGroup>\r\n              <Button\r\n                className=\"mt-2\"\r\n                type=\"submit\"\r\n                value=\"submit\"\r\n                color=\"primary\"\r\n              >\r\n                Login\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-4 offset-1 col-sm-2\">\r\n            <h5>Links</h5>\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                <Link to=\"/home\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/aboutus\">About Us</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/menu\">Menu</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/contactus\">Contact Us</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-7 col-sm-5\">\r\n            <h5>Our Address</h5>\r\n            <address>\r\n              121, Clear Water Bay Road\r\n              <br />\r\n              Clear Water Bay, Kowloon\r\n              <br />\r\n              HONG KONG\r\n              <br />\r\n              <i className=\"fa fa-phone fa-lg\" />: +852 1234 5678\r\n              <br />\r\n              <i className=\"fa fa-fax fa-lg\" />: +852 8765 4321\r\n              <br />\r\n              <i className=\"fa fa-envelope fa-lg\" />:{' '}\r\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n            </address>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 align-self-center\">\r\n            <div className=\"text-center\">\r\n              <a\r\n                className=\"btn btn-social-icon btn-google\"\r\n                href=\"http://google.com/+\"\r\n              >\r\n                <i className=\"fa fa-google-plus\" />\r\n              </a>\r\n              <a\r\n                className=\"btn btn-social-icon btn-facebook\"\r\n                href=\"http://www.facebook.com/profile.php?id=\"\r\n              >\r\n                <i className=\"fa fa-facebook\" />\r\n              </a>\r\n              <a\r\n                className=\"btn btn-social-icon btn-linkedin\"\r\n                href=\"http://www.linkedin.com/in/\"\r\n              >\r\n                <i className=\"fa fa-linkedin\" />\r\n              </a>\r\n              <a\r\n                className=\"btn btn-social-icon btn-twitter\"\r\n                href=\"http://twitter.com/\"\r\n              >\r\n                <i className=\"fa fa-twitter\" />\r\n              </a>\r\n              <a\r\n                className=\"btn btn-social-icon btn-google\"\r\n                href=\"http://youtube.com/\"\r\n              >\r\n                <i className=\"fa fa-youtube\" />\r\n              </a>\r\n              <a className=\"btn btn-social-icon\" href=\"mailto:\">\r\n                <i className=\"fa fa-envelope-o\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-auto\">\r\n            <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n  return (\r\n    <div className=\"col-12\">\r\n      <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\" />\r\n      <p>Loading . . .</p>\r\n    </div>\r\n  );\r\n};\r\n","export const baseUrl = 'http://localhost:3001/';\r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { FadeTransform } from 'react-animation-components';\r\nimport { Loading } from './LoadingComponent.js';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n            <FadeTransform in transformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard\r\n                        item={props.dish}\r\n                        isLoading={props.isLoading}\r\n                        errMess={props.errMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard\r\n                        item={props.promotion}\r\n                        isLoading={props.promoLoading}\r\n                        errMess={props.promoErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard\r\n                        item={props.leader}\r\n                        isLoading={props.leadersLoading}\r\n                        errMess={props.leadersErrMess}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardImgOverlay,\r\n  CardTitle,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({dish, onClick}) {\r\n  return (\r\n    <Card>\r\n      <Link to={`/menu/${dish.id}`}>\r\n        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />{' '}\r\n        <CardImgOverlay>\r\n          <CardTitle>{dish.name}</CardTitle>\r\n        </CardImgOverlay>\r\n      </Link>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst Menu = props => {\r\n  const menu = props.dishes.dishes.map(dish => {\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n        <RenderMenuItem dish={dish} onClick={props.onClick} />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  if (props.dishes.isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.dishes.errMess) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h4>{props.dishes.errMess}</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Menu</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">{menu}</div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nfunction RenderLeader({ leader }){\r\n\treturn (\r\n\t\t<Media tag=\"li\">\r\n\t\t\t<Media left middle>\r\n\t\t\t\t<Media object src={baseUrl + leader.image} alt={leader.name} />\r\n\t\t\t</Media>\r\n\t\t\t<Media body className=\"ml-5\">\r\n\t\t\t\t<Media heading>{leader.name}</Media>\r\n\t\t\t\t<h6>{leader.designation}</h6>\r\n\t\t\t\t<p>{leader.description}</p>\r\n\t\t\t</Media>\r\n\t\t</Media>\r\n\t);\r\n}\r\n\r\nfunction About(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <Stagger in>\r\n                            {props.leaders.map((leader) => {\r\n                                return (\r\n                                    <Fade in>\r\n                                        <RenderLeader leader={leader} />\r\n                                    </Fade>\r\n                                );\r\n                            })}\r\n                        </Stagger>\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required   = (val) => val && val.length;\r\nconst maxLength  = (len) => (val) => !val || (val.length <= len);\r\nconst minLength  = (len) => (val) =>  val && (val.length >= len);\r\nconst isNumber   = (val) => !isNaN( Number(val) );\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert(\"Thanks for your feedback.\\n\" + JSON.stringify(values));\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"skype:username\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Label,\r\n} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Control, LocalForm, Errors} from 'react-redux-form';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport {FadeTransform, Fade, Stagger} from 'react-animation-components';\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || val.length <= len;\r\nconst minLength = len => val => val && val.length >= len;\r\n\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n  let _comments = comments.map(comment => {\r\n    return (\r\n      <Stagger in>\r\n        {comments.map(comment => {\r\n          return (\r\n            <Fade in>\r\n              <li key={comment.id}>\r\n                <p>{comment.comment}</p>\r\n                <p>\r\n                  -- {comment.author} ,{' '}\r\n                  {new Intl.DateTimeFormat('en-US', {\r\n                    year: 'numeric',\r\n                    month: 'short',\r\n                    day: '2-digit',\r\n                  }).format(new Date(Date.parse(comment.date)))}\r\n                </p>\r\n              </li>\r\n            </Fade>\r\n          );\r\n        })}\r\n      </Stagger>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h4>Comments</h4>\r\n      <ul className=\"list-unstyled\">{_comments}</ul>\r\n      <CommentForm dishId={dishId} postComment={postComment} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction RenderDish({dish}) {\r\n  if (dish != null) {\r\n    return (\r\n      <FadeTransform\r\n        in\r\n        transformProps={{\r\n          exitTransform: 'scale(0.5) translateY(-50%)',\r\n        }}\r\n      >\r\n        <Card>\r\n          <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n          <CardBody>\r\n            <CardTitle>{dish.name}</CardTitle>\r\n            <CardText>{dish.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    );\r\n  } else return <div />;\r\n}\r\n\r\nclass CommentForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    this.state = {\r\n      isModalOpen: false,\r\n    };\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    this.props.postComment(\r\n      this.props.dishId,\r\n      values.rating,\r\n      values.author,\r\n      values.comment\r\n    );\r\n\r\n    console.log('Current State is: ' + JSON.stringify(values));\r\n    alert('Current State is: ' + JSON.stringify(values));\r\n    // event.preventDefault();\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          className=\"btn-light border border-dark\"\r\n          role=\"button\"\r\n          onClick={this.toggleModal}\r\n        >\r\n          <i className=\"fa fa-pencil\" /> Submit Comment\r\n        </Button>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"rating\">Rating</Label>\r\n                <Control.select\r\n                  model=\".rating\"\r\n                  name=\"rating\"\r\n                  id=\"rating\"\r\n                  className=\"selectpicker show-tick form-control\"\r\n                >\r\n                  <option>1</option>\r\n                  <option>2</option>\r\n                  <option>3</option>\r\n                  <option>4</option>\r\n                  <option>5</option>\r\n                </Control.select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"author\">First Name</Label>\r\n                <Control.text\r\n                  model=\".author\"\r\n                  id=\"author\"\r\n                  name=\"author\"\r\n                  placeholder=\"Your Name\"\r\n                  className=\"form-control\"\r\n                  validators={{\r\n                    required,\r\n                    minLength: minLength(3),\r\n                    maxLength: maxLength(15),\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".author\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: 'Required! ',\r\n                    minLength: 'Must be greater than 2 characters',\r\n                    maxLength: 'Must be 15 characters or less',\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"comment\">Comment</Label>\r\n                <Control.textarea\r\n                  model=\".comment\"\r\n                  id=\"comment\"\r\n                  name=\"comment\"\r\n                  placeholder=\"Your Comment\"\r\n                  rows=\"6\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <Button\r\n                className=\"mt-2\"\r\n                type=\"submit\"\r\n                value=\"submit\"\r\n                color=\"primary\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Dishdetail = props => {\r\n  if (props.isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.errMess) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h4>{props.errMess}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.dish != null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/menu\">Menu</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>{props.dish.name}</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n            <RenderDish dish={props.dish} />\r\n          </div>\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n            <RenderComments\r\n              comments={props.comments}\r\n              postComment={props.postComment}\r\n              dishId={props.dish.id}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else return <div />;\r\n};\r\n\r\nexport default Dishdetail;\r\n","import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\nexport const fetchDishes = () => dispatch => {\r\n  dispatch(dishesLoading(true));\r\n\r\n  return fetch(baseUrl + 'dishes')\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            'Error ' + response.status + ': ' + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n  type: ActionTypes.DISHES_LOADING,\r\n});\r\n\r\nexport const dishesFailed = errmess => ({\r\n  type: ActionTypes.DISHES_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addDishes = dishes => ({\r\n  type: ActionTypes.ADD_DISHES,\r\n  payload: dishes,\r\n});\r\n\r\nexport const fetchComments = () => dispatch => {\r\n  return fetch(baseUrl + 'comments')\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            'Error ' + response.status + ': ' + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = errmess => ({\r\n  type: ActionTypes.COMMENTS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addComments = comments => ({\r\n  type: ActionTypes.ADD_COMMENTS,\r\n  payload: comments,\r\n});\r\n\r\nexport const addComment = (dishId, rating, author, comment) => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\r\n  const newComment = {\r\n    dishId: dishId,\r\n    rating: rating,\r\n    author: author,\r\n    comment: comment,\r\n  };\r\n\r\n  newComment.date = new Date().toISOString();\r\n\r\n  return fetch(baseUrl + 'comments', {\r\n    method: 'POST',\r\n    body: JSON.stringify(newComment),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    credentials: 'same-origin',\r\n  })\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            'Error ' + response.status + ': ' + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => {\r\n      console.log('post comments', error.message);\r\n      alert('Your comment could not be posted\\nError: ' + error.message);\r\n    });\r\n};\r\n\r\nexport const fetchPromos = () => dispatch => {\r\n  dispatch(promosLoading());\r\n\r\n  return fetch(baseUrl + 'promotions')\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            'Error ' + response.status + ': ' + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => ({\r\n  type: ActionTypes.PROMOS_LOADING,\r\n});\r\n\r\nexport const promosFailed = errmess => ({\r\n  type: ActionTypes.PROMOS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addPromos = promos => ({\r\n  type: ActionTypes.ADD_PROMOS,\r\n  payload: promos,\r\n});\r\n\r\nexport const fetchLeaders = () => dispatch => {\r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            'Error ' + response.status + ': ' + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING,\r\n});\r\n\r\nexport const leadersFailed = errmess => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addLeaders = leaders => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders,\r\n});\r\n\r\nexport const postFeedback = values => dispatch => {\r\n  return fetch(baseUrl + 'feedback', {\r\n    method: 'POST',\r\n    body: JSON.stringify(values),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    credentials: 'same-origin',\r\n  })\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            'Error ' + response.status + ': ' + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => {\r\n      console.log('post feedback', error.message);\r\n      alert('Your feedback could not be posted\\nError: ' + error.message);\r\n    });\r\n};\r\n","export const ADD_DISHES = 'ADD_DISHES';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n","import React, {Component} from 'react';\r\nimport Header from './HeaderComponent.js';\r\nimport Footer from './FooterComponent.js';\r\nimport Home from './HomeComponent.js';\r\nimport Menu from './MenuComponent.js';\r\nimport About from './AboutComponent.js';\r\nimport Contact from './ContactComponent.js';\r\nimport Dishdetail from './DishdetailComponent.js';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        leaders: state.leaders,\r\n        promotions: state.promotions\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    postFeedback: (values) => dispatch(postFeedback(values)),\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n    fetchDishes: () => { dispatch(fetchDishes())},\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    render(){\r\n        const HomePage = () => {\r\n            console.log(this.props.leaders);\r\n            return(\r\n                <Home\r\n                dish={this.props.dishes.dishes.filter(dish => dish.featured)[0]}\r\n                isLoading={this.props.dishes.isLoading}\r\n                errMess={this.props.dishes.errMess}\r\n                promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                promoLoading={this.props.promotions.isLoading}\r\n                promoErrMess={this.props.promotions.errMess}\r\n                leader={this.props.leaders.leaders.filter(leader => leader.featured)[0]}\r\n                leadersLoading={this.props.leaders.isLoading}\r\n                leadersErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        }\r\n\r\n        const DishWithId = ({match}) => {\r\n            return (\r\n                <Dishdetail\r\n                dish={this.props.dishes.dishes.filter(dish => dish.id === parseInt(match.params.dishId))[0]}\r\n                isLoading={this.props.dishes.isLoading}\r\n                errMess={this.props.dishes.errMess}\r\n                comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId))}\r\n                commentsErrMess={this.props.comments.errMess}\r\n                postComment={this.props.postComment}\r\n                />\r\n            );\r\n        }\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch location={this.props.location}>\r\n                            <Route path=\"/home\" component={HomePage}></Route>\r\n                            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />}></Route>\r\n                            <Route path=\"/menu/:dishId\" component={DishWithId}></Route>\r\n                            <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders.leaders} />}></Route>\r\n                            <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />}></Route>\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default withRouter( connect(mapStateToProps, mapDispatchToProps)(Main) );","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (\r\n  state = {isLoading: true, errMess: null, dishes: []},\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_DISHES:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        dishes: action.payload,\r\n      };\r\n\r\n    case ActionTypes.DISHES_LOADING:\r\n      return {...state, isLoading: true, errMess: null, dishes: []};\r\n\r\n    case ActionTypes.DISHES_FAILED:\r\n      return {...state, isLoading: false, errMess: action.payload};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {errMess: null, comments: []}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n      var comment = action.payload;\r\n      return {...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (\r\n  state = {isLoading: true, errMess: null, promotions: []},\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_PROMOS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        promotions: action.payload,\r\n      };\r\n\r\n    case ActionTypes.PROMOS_LOADING:\r\n      return {...state, isLoading: true, errMess: null, promotions: []};\r\n\r\n    case ActionTypes.PROMOS_FAILED:\r\n      return {...state, isLoading: false, errMess: action.payload};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (\r\n  state = {isLoading: true, errMess: null, leaders: []},\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_LEADERS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        leaders: action.payload,\r\n      };\r\n\r\n    case ActionTypes.LEADERS_LOADING:\r\n      return {...state, isLoading: true, errMess: null, leaders: []};\r\n\r\n    case ActionTypes.LEADERS_FAILED:\r\n      return {...state, isLoading: false, errMess: action.payload};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const InitialFeedback = {\r\n  firstname: '',\r\n  lastname: '',\r\n  telnum: '',\r\n  email: '',\r\n  agree: false,\r\n  contactType: 'Tel.',\r\n  message: '',\r\n};\r\n","import {Dishes} from './dishes';\r\nimport {Comments} from './comments';\r\nimport {Promotions} from './promotions';\r\nimport {Leaders} from './leaders';\r\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {createForms} from 'react-redux-form';\r\nimport {InitialFeedback} from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n  const store = createStore(\r\n    combineReducers({\r\n      dishes: Dishes,\r\n      comments: Comments,\r\n      promotions: Promotions,\r\n      leaders: Leaders,\r\n      ...createForms({\r\n        feedback: InitialFeedback,\r\n      }),\r\n    }),\r\n    applyMiddleware(thunk, logger)\r\n  );\r\n\r\n  return store;\r\n};\r\n","import React, {Component} from 'react';\nimport Main from './components/MainComponent';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\nimport './App.css';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <BrowserRouter>\n            <div className=\"App\">\n              <Main />\n            </div>\n          </BrowserRouter>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}